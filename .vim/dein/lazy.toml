[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript', 'javascript.jsx', 'typescript']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'
on_ft = ['javascript', 'javascript.jsx', 'typescript']

[[plugins]]
repo = 'maxmellon/vim-jsx-pretty'
on_ft = ['javascript', 'javascript.jsx', 'typescript']

# [[plugins]]
# repo = 'alampros/vim-styled-jsx'
# on_ft = ['javascript', 'javascript.jsx', 'typescript']

[[plugins]]
repo = 'moll/vim-node'
on_ft = ['javascript', 'typescript']

[[plugins]]
repo = 'dense-analysis/ale'
on_ft = ['javascript', 'ruby', 'typescript']
on_source = ['lightline.vim']

hook_add = '''
  let g:ale_fixers = {
  \  '*': ['remove_trailing_lines', 'trim_whitespace'],
  \  'javascript': ['eslint'],
  \}
  let g:ale_fix_on_save = 1
  let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '']
  let g:ale_echo_msg_format = '[%linter%] %s'
  let g:ale_sign_column_always = 1
  let g:ale_set_loclist = 0
  nmap <silent> <C-k> <Plug>(ale_previous_wrap)
  nmap <silent> <C-j> <Plug>(ale_next_wrap)
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
  let g:neosnippet#snippets_directory='~/.vim/snippets/'
  let g:neosnippet#disable_runtime_snippets= {'_' : 1,}
'''
on_i  = 1
on_ft = ['snippet']
