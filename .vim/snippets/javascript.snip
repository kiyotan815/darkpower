snippet :f
options head
  ${1:#:method_name}: function(${2:#:attribute}) {
    ${0:TARGET}
  }

snippet function
alias func
abbr function() {}
options word
  function ${1:#:function_name}(${2:#:argument}) {
    ${0:TARGET}
  }

snippet arrow
alias af, arrw
abbr arrow function
options word
  const ${1} = (${2}) => {
    ${3}
  }

snippet fc
options word
  function(${1}) { ${0:TARGET} }

snippet if
options head
  if (${1:true}) {
    ${0:TARGET}
  }

snippet try
options head
  try {
    ${1:TARGET}
  } catch (${2:e}) {
    ${3}
  }

snippet const
options head
  const ${1} = ${0:TARGET}

snippet key-value
alias kv
abbr :,
options word
  ${1:#:value_name}: ${0:#:value},

snippet console-log
alias cl
options head
  console.log(${0:TARGET})

snippet console-error
alias cle
options head
  console.error(${1:error})

snippet     import
alias imp
abbr        import { member, ... } from 'module-name'
options     head
  import { ${1:MEMBERS} } from '${0:TARGET}'

snippet     import-default
alias impd
abbr        import defaultMember from 'module-name'
options     head
  import ${1:defaultMember} from '${0:TARGET}'

snippet rcc
abbr react Class Component
options head
  class ${1:componentName} extends Component {
    constructor(props) {
      super(props)
    }

    render() {
      return (
        <div>${0:TARGET}</div>
      )
    }
  }

snippet rfc
abbr react Functional Component
options head
  function ${1:componentName}(${2:props}) {
    return (
      <div>${3}</div>
    )
  }

snippet edf
abbr export default
options head
  export default ${0:TARGET}

snippet ush
abbr react useState hook
options head
  const [${1}, set${2}] = useState(${3})

snippet ueh
abbr react useEffect hook
options head
  useEffect(() => {
    ${1}
  })

snippet uehr
abbr react useEffect hook
options head
  useEffect(() => {
    ${1}
    return () => {
      ${2}
    }
  })
